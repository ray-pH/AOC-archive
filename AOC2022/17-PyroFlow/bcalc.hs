import System.IO

-- (1704,12,2630,"....#..")
-- (3399,12,5240,"....#..")
-- (5094,12,7850,"....#..")
-- (6789,12,10460,"....#..")
-- (8484,12,13070,"....#..")
-- (10179,12,15680,"....#..")
--
-- (2500,4829,3825,"..##...")
--
-- each +1695, repeat
-- y(1704)    = 2630
-- y(1704+1695)  = y(1704) + 2610
-- y(1704+1695x) = y(1704) + 2610x
--
-- y(r)  -> r = 1704 + 1695x -> x = (r-1704)/1695

main :: IO()
main = do
    let r = 1000000000000
        (d,m) = divMod (r-1704) 1695   -- (589970500,796)
        baseline = d * 2610 + 2630     -- 1539823007630
        -- find y at 1704 + 796 = 2500
        --   = y(2500) - y(1704)
        -- todo = 3823 - 2630 --19 manual clalc
        todo = 3825 - 2630 --19 manual clalc
    print (d,m)
    print baseline
    print $ baseline + todo
